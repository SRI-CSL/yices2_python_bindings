;
; Sudoku encoded using integer variables
; x_i_j = value in row i, column j for i=1 to 9 and j=1 to 9

(define x_1_1::int)
(define x_1_2::int)
(define x_1_3::int)
(define x_1_4::int)
(define x_1_5::int)
(define x_1_6::int)
(define x_1_7::int)
(define x_1_8::int)
(define x_1_9::int)

(define x_2_1::int)
(define x_2_2::int)
(define x_2_3::int)
(define x_2_4::int)
(define x_2_5::int)
(define x_2_6::int)
(define x_2_7::int)
(define x_2_8::int)
(define x_2_9::int)

(define x_3_1::int)
(define x_3_2::int)
(define x_3_3::int)
(define x_3_4::int)
(define x_3_5::int)
(define x_3_6::int)
(define x_3_7::int)
(define x_3_8::int)
(define x_3_9::int)

(define x_4_1::int)
(define x_4_2::int)
(define x_4_3::int)
(define x_4_4::int)
(define x_4_5::int)
(define x_4_6::int)
(define x_4_7::int)
(define x_4_8::int)
(define x_4_9::int)

(define x_5_1::int)
(define x_5_2::int)
(define x_5_3::int)
(define x_5_4::int)
(define x_5_5::int)
(define x_5_6::int)
(define x_5_7::int)
(define x_5_8::int)
(define x_5_9::int)

(define x_6_1::int)
(define x_6_2::int)
(define x_6_3::int)
(define x_6_4::int)
(define x_6_5::int)
(define x_6_6::int)
(define x_6_7::int)
(define x_6_8::int)
(define x_6_9::int)

(define x_7_1::int)
(define x_7_2::int)
(define x_7_3::int)
(define x_7_4::int)
(define x_7_5::int)
(define x_7_6::int)
(define x_7_7::int)
(define x_7_8::int)
(define x_7_9::int)

(define x_8_1::int)
(define x_8_2::int)
(define x_8_3::int)
(define x_8_4::int)
(define x_8_5::int)
(define x_8_6::int)
(define x_8_7::int)
(define x_8_8::int)
(define x_8_9::int)

(define x_9_1::int)
(define x_9_2::int)
(define x_9_3::int)
(define x_9_4::int)
(define x_9_5::int)
(define x_9_6::int)
(define x_9_7::int)
(define x_9_8::int)
(define x_9_9::int)

;
; Every value is between 1 and 9
;
(assert (and (<= 1 x_1_1) (<= x_1_1 9)))
(assert (and (<= 1 x_1_2) (<= x_1_2 9)))
(assert (and (<= 1 x_1_3) (<= x_1_3 9)))
(assert (and (<= 1 x_1_4) (<= x_1_4 9)))
(assert (and (<= 1 x_1_5) (<= x_1_5 9)))
(assert (and (<= 1 x_1_6) (<= x_1_6 9)))
(assert (and (<= 1 x_1_7) (<= x_1_7 9)))
(assert (and (<= 1 x_1_8) (<= x_1_8 9)))
(assert (and (<= 1 x_1_9) (<= x_1_9 9)))

(assert (and (<= 1 x_2_1) (<= x_2_1 9)))
(assert (and (<= 1 x_2_2) (<= x_2_2 9)))
(assert (and (<= 1 x_2_3) (<= x_2_3 9)))
(assert (and (<= 1 x_2_4) (<= x_2_4 9)))
(assert (and (<= 1 x_2_5) (<= x_2_5 9)))
(assert (and (<= 1 x_2_6) (<= x_2_6 9)))
(assert (and (<= 1 x_2_7) (<= x_2_7 9)))
(assert (and (<= 1 x_2_8) (<= x_2_8 9)))
(assert (and (<= 1 x_2_9) (<= x_2_9 9)))

(assert (and (<= 1 x_3_1) (<= x_3_1 9)))
(assert (and (<= 1 x_3_2) (<= x_3_2 9)))
(assert (and (<= 1 x_3_3) (<= x_3_3 9)))
(assert (and (<= 1 x_3_4) (<= x_3_4 9)))
(assert (and (<= 1 x_3_5) (<= x_3_5 9)))
(assert (and (<= 1 x_3_6) (<= x_3_6 9)))
(assert (and (<= 1 x_3_7) (<= x_3_7 9)))
(assert (and (<= 1 x_3_8) (<= x_3_8 9)))
(assert (and (<= 1 x_3_9) (<= x_3_9 9)))

(assert (and (<= 1 x_4_1) (<= x_4_1 9)))
(assert (and (<= 1 x_4_2) (<= x_4_2 9)))
(assert (and (<= 1 x_4_3) (<= x_4_3 9)))
(assert (and (<= 1 x_4_4) (<= x_4_4 9)))
(assert (and (<= 1 x_4_5) (<= x_4_5 9)))
(assert (and (<= 1 x_4_6) (<= x_4_6 9)))
(assert (and (<= 1 x_4_7) (<= x_4_7 9)))
(assert (and (<= 1 x_4_8) (<= x_4_8 9)))
(assert (and (<= 1 x_4_9) (<= x_4_9 9)))

(assert (and (<= 1 x_5_1) (<= x_5_1 9)))
(assert (and (<= 1 x_5_2) (<= x_5_2 9)))
(assert (and (<= 1 x_5_3) (<= x_5_3 9)))
(assert (and (<= 1 x_5_4) (<= x_5_4 9)))
(assert (and (<= 1 x_5_5) (<= x_5_5 9)))
(assert (and (<= 1 x_5_6) (<= x_5_6 9)))
(assert (and (<= 1 x_5_7) (<= x_5_7 9)))
(assert (and (<= 1 x_5_8) (<= x_5_8 9)))
(assert (and (<= 1 x_5_9) (<= x_5_9 9)))

(assert (and (<= 1 x_6_1) (<= x_6_1 9)))
(assert (and (<= 1 x_6_2) (<= x_6_2 9)))
(assert (and (<= 1 x_6_3) (<= x_6_3 9)))
(assert (and (<= 1 x_6_4) (<= x_6_4 9)))
(assert (and (<= 1 x_6_5) (<= x_6_5 9)))
(assert (and (<= 1 x_6_6) (<= x_6_6 9)))
(assert (and (<= 1 x_6_7) (<= x_6_7 9)))
(assert (and (<= 1 x_6_8) (<= x_6_8 9)))
(assert (and (<= 1 x_6_9) (<= x_6_9 9)))

(assert (and (<= 1 x_7_1) (<= x_7_1 9)))
(assert (and (<= 1 x_7_2) (<= x_7_2 9)))
(assert (and (<= 1 x_7_3) (<= x_7_3 9)))
(assert (and (<= 1 x_7_4) (<= x_7_4 9)))
(assert (and (<= 1 x_7_5) (<= x_7_5 9)))
(assert (and (<= 1 x_7_6) (<= x_7_6 9)))
(assert (and (<= 1 x_7_7) (<= x_7_7 9)))
(assert (and (<= 1 x_7_8) (<= x_7_8 9)))
(assert (and (<= 1 x_7_9) (<= x_7_9 9)))

(assert (and (<= 1 x_8_1) (<= x_8_1 9)))
(assert (and (<= 1 x_8_2) (<= x_8_2 9)))
(assert (and (<= 1 x_8_3) (<= x_8_3 9)))
(assert (and (<= 1 x_8_4) (<= x_8_4 9)))
(assert (and (<= 1 x_8_5) (<= x_8_5 9)))
(assert (and (<= 1 x_8_6) (<= x_8_6 9)))
(assert (and (<= 1 x_8_7) (<= x_8_7 9)))
(assert (and (<= 1 x_8_8) (<= x_8_8 9)))
(assert (and (<= 1 x_8_9) (<= x_8_9 9)))

(assert (and (<= 1 x_9_1) (<= x_9_1 9)))
(assert (and (<= 1 x_9_2) (<= x_9_2 9)))
(assert (and (<= 1 x_9_3) (<= x_9_3 9)))
(assert (and (<= 1 x_9_4) (<= x_9_4 9)))
(assert (and (<= 1 x_9_5) (<= x_9_5 9)))
(assert (and (<= 1 x_9_6) (<= x_9_6 9)))
(assert (and (<= 1 x_9_7) (<= x_9_7 9)))
(assert (and (<= 1 x_9_8) (<= x_9_8 9)))
(assert (and (<= 1 x_9_9) (<= x_9_9 9)))

;
; All elements in a row must be distinct
;
(assert (distinct x_1_1 x_1_2 x_1_3 x_1_4 x_1_5 x_1_6 x_1_7 x_1_8 x_1_9))
(assert (distinct x_2_1 x_2_2 x_2_3 x_2_4 x_2_5 x_2_6 x_2_7 x_2_8 x_2_9))
(assert (distinct x_3_1 x_3_2 x_3_3 x_3_4 x_3_5 x_3_6 x_3_7 x_3_8 x_3_9))
(assert (distinct x_4_1 x_4_2 x_4_3 x_4_4 x_4_5 x_4_6 x_4_7 x_4_8 x_4_9))
(assert (distinct x_5_1 x_5_2 x_5_3 x_5_4 x_5_5 x_5_6 x_5_7 x_5_8 x_5_9))
(assert (distinct x_6_1 x_6_2 x_6_3 x_6_4 x_6_5 x_6_6 x_6_7 x_6_8 x_6_9))
(assert (distinct x_7_1 x_7_2 x_7_3 x_7_4 x_7_5 x_7_6 x_7_7 x_7_8 x_7_9))
(assert (distinct x_8_1 x_8_2 x_8_3 x_8_4 x_8_5 x_8_6 x_8_7 x_8_8 x_8_9))
(assert (distinct x_9_1 x_9_2 x_9_3 x_9_4 x_9_5 x_9_6 x_9_7 x_9_8 x_9_9))

;
; All elements in a column must be distinct
;
(assert (distinct x_1_1 x_2_1 x_3_1 x_4_1 x_5_1 x_6_1 x_7_1 x_8_1 x_9_1))
(assert (distinct x_1_2 x_2_2 x_3_2 x_4_2 x_5_2 x_6_2 x_7_2 x_8_2 x_9_2))
(assert (distinct x_1_3 x_2_3 x_3_3 x_4_3 x_5_3 x_6_3 x_7_3 x_8_3 x_9_3))
(assert (distinct x_1_4 x_2_4 x_3_4 x_4_4 x_5_4 x_6_4 x_7_4 x_8_4 x_9_4))
(assert (distinct x_1_5 x_2_5 x_3_5 x_4_5 x_5_5 x_6_5 x_7_5 x_8_5 x_9_5))
(assert (distinct x_1_6 x_2_6 x_3_6 x_4_6 x_5_6 x_6_6 x_7_6 x_8_6 x_9_6))
(assert (distinct x_1_7 x_2_7 x_3_7 x_4_7 x_5_7 x_6_7 x_7_7 x_8_7 x_9_7))
(assert (distinct x_1_8 x_2_8 x_3_8 x_4_8 x_5_8 x_6_8 x_7_8 x_8_8 x_9_8))
(assert (distinct x_1_9 x_2_9 x_3_9 x_4_9 x_5_9 x_6_9 x_7_9 x_8_9 x_9_9))

;
; All elements in each 3x3 square must be distinct
;
(assert (distinct x_1_1 x_1_2 x_1_3 x_2_1 x_2_2 x_2_3 x_3_1 x_3_2 x_3_3))
(assert (distinct x_1_4 x_1_5 x_1_6 x_2_4 x_2_5 x_2_6 x_3_4 x_3_5 x_3_6))
(assert (distinct x_1_7 x_1_8 x_1_9 x_2_7 x_2_8 x_2_9 x_3_7 x_3_8 x_3_9))
(assert (distinct x_4_1 x_4_2 x_4_3 x_5_1 x_5_2 x_5_3 x_6_1 x_6_2 x_6_3))
(assert (distinct x_4_4 x_4_5 x_4_6 x_5_4 x_5_5 x_5_6 x_6_4 x_6_5 x_6_6))
(assert (distinct x_4_7 x_4_8 x_4_9 x_5_7 x_5_8 x_5_9 x_6_7 x_6_8 x_6_9))
(assert (distinct x_7_1 x_7_2 x_7_3 x_8_1 x_8_2 x_8_3 x_9_1 x_9_2 x_9_3))
(assert (distinct x_7_4 x_7_5 x_7_6 x_8_4 x_8_5 x_8_6 x_9_4 x_9_5 x_9_6))
(assert (distinct x_7_7 x_7_8 x_7_9 x_8_7 x_8_8 x_8_9 x_9_7 x_9_8 x_9_9))

;
; Constraints:
;
;   -------------------------
;   |     2 |       | 7 6 8 |
;   | 4   7 |       | 5     |
;   |       | 8   7 |       |
;   -------------------------
;   |   5   |   1   |       |
;   |   2 8 |       | 4     |
;   | 3     |   4   |   7   |
;   -------------------------
;   |       | 3   1 |       |
;   |     9 |       | 8   5 |
;   | 6 7 1 |       | 2     |
;   -------------------------
;

(assert (= x_1_3 2))
(assert (= x_1_7 7))
(assert (= x_1_8 6))
(assert (= x_1_9 8))

(assert (= x_2_1 4))
(assert (= x_2_3 7))
(assert (= x_2_7 5))

(assert (= x_3_4 8))
(assert (= x_3_6 7))

(assert (= x_4_2 5))
(assert (= x_4_5 1))

(assert (= x_5_2 2))
(assert (= x_5_3 8))
(assert (= x_5_7 4))

(assert (= x_6_1 3))
(assert (= x_6_5 4))
(assert (= x_6_8 7))

(assert (= x_7_4 3))
(assert (= x_7_6 1))

(assert (= x_8_3 9))
(assert (= x_8_7 8))
(assert (= x_8_9 5))

(assert (= x_9_1 6))
(assert (= x_9_2 7))
(assert (= x_9_3 1))
(assert (= x_9_7 2))

(check)

;
; Print the solution
;
(echo "x_1_1 = ")
(eval x_1_1)
(echo "x_1_2 = ")
(eval x_1_2)
(echo "x_1_3 = ")
(eval x_1_3)
(echo "x_1_4 = ")
(eval x_1_4)
(echo "x_1_5 = ")
(eval x_1_5)
(echo "x_1_6 = ")
(eval x_1_6)
(echo "x_1_7 = ")
(eval x_1_7)
(echo "x_1_8 = ")
(eval x_1_8)
(echo "x_1_9 = ")
(eval x_1_9)

(echo "\nx_2_1 = ")
(eval x_2_1)
(echo "x_2_2 = ")
(eval x_2_2)
(echo "x_2_3 = ")
(eval x_2_3)
(echo "x_2_4 = ")
(eval x_2_4)
(echo "x_2_5 = ")
(eval x_2_5)
(echo "x_2_6 = ")
(eval x_2_6)
(echo "x_2_7 = ")
(eval x_2_7)
(echo "x_2_8 = ")
(eval x_2_8)
(echo "x_2_9 = ")
(eval x_2_9)

(echo "\nx_3_1 = ")
(eval x_3_1)
(echo "x_3_2 = ")
(eval x_3_2)
(echo "x_3_3 = ")
(eval x_3_3)
(echo "x_3_4 = ")
(eval x_3_4)
(echo "x_3_5 = ")
(eval x_3_5)
(echo "x_3_6 = ")
(eval x_3_6)
(echo "x_3_7 = ")
(eval x_3_7)
(echo "x_3_8 = ")
(eval x_3_8)
(echo "x_3_9 = ")
(eval x_3_9)

(echo "\nx_4_1 = ")
(eval x_4_1)
(echo "x_4_2 = ")
(eval x_4_2)
(echo "x_4_3 = ")
(eval x_4_3)
(echo "x_4_4 = ")
(eval x_4_4)
(echo "x_4_5 = ")
(eval x_4_5)
(echo "x_4_6 = ")
(eval x_4_6)
(echo "x_4_7 = ")
(eval x_4_7)
(echo "x_4_8 = ")
(eval x_4_8)
(echo "x_4_9 = ")
(eval x_4_9)

(echo "\nx_5_1 = ")
(eval x_5_1)
(echo "x_5_2 = ")
(eval x_5_2)
(echo "x_5_3 = ")
(eval x_5_3)
(echo "x_5_4 = ")
(eval x_5_4)
(echo "x_5_5 = ")
(eval x_5_5)
(echo "x_5_6 = ")
(eval x_5_6)
(echo "x_5_7 = ")
(eval x_5_7)
(echo "x_5_8 = ")
(eval x_5_8)
(echo "x_5_9 = ")
(eval x_5_9)

(echo "\nx_6_1 = ")
(eval x_6_1)
(echo "x_6_2 = ")
(eval x_6_2)
(echo "x_6_3 = ")
(eval x_6_3)
(echo "x_6_4 = ")
(eval x_6_4)
(echo "x_6_5 = ")
(eval x_6_5)
(echo "x_6_6 = ")
(eval x_6_6)
(echo "x_6_7 = ")
(eval x_6_7)
(echo "x_6_8 = ")
(eval x_6_8)
(echo "x_6_9 = ")
(eval x_6_9)

(echo "\nx_7_1 = ")
(eval x_7_1)
(echo "x_7_2 = ")
(eval x_7_2)
(echo "x_7_3 = ")
(eval x_7_3)
(echo "x_7_4 = ")
(eval x_7_4)
(echo "x_7_5 = ")
(eval x_7_5)
(echo "x_7_6 = ")
(eval x_7_6)
(echo "x_7_7 = ")
(eval x_7_7)
(echo "x_7_8 = ")
(eval x_7_8)
(echo "x_7_9 = ")
(eval x_7_9)

(echo "\nx_8_1 = ")
(eval x_8_1)
(echo "x_8_2 = ")
(eval x_8_2)
(echo "x_8_3 = ")
(eval x_8_3)
(echo "x_8_4 = ")
(eval x_8_4)
(echo "x_8_5 = ")
(eval x_8_5)
(echo "x_8_6 = ")
(eval x_8_6)
(echo "x_8_7 = ")
(eval x_8_7)
(echo "x_8_8 = ")
(eval x_8_8)
(echo "x_8_9 = ")
(eval x_8_9)

(echo "\nx_9_1 = ")
(eval x_9_1)
(echo "x_9_2 = ")
(eval x_9_2)
(echo "x_9_3 = ")
(eval x_9_3)
(echo "x_9_4 = ")
(eval x_9_4)
(echo "x_9_5 = ")
(eval x_9_5)
(echo "x_9_6 = ")
(eval x_9_6)
(echo "x_9_7 = ")
(eval x_9_7)
(echo "x_9_8 = ")
(eval x_9_8)
(echo "x_9_9 = ")
(eval x_9_9)

;
; This should give this
;
;   -------------------------
;   | 1 9 2 | 4 5 3 | 7 6 8 |
;   | 4 8 7 | 1 6 2 | 5 3 9 |
;   | 5 6 3 | 8 9 7 | 1 2 4 |
;   -------------------------
;   | 7 5 4 | 2 1 9 | 3 8 6 |
;   | 9 2 8 | 7 3 6 | 4 5 1 |
;   | 3 1 6 | 5 4 8 | 9 7 2 |
;   -------------------------
;   | 8 4 5 | 3 2 1 | 6 9 7 |
;   | 2 3 9 | 6 7 4 | 8 1 5 |
;   | 6 7 1 | 9 8 5 | 2 4 3 |
;   -------------------------
; 